name: "[CI] Build and Test"
on:
  # push:
  #   branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build_and_test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - name: Switch to main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      
      - name: Install Ninja on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get install ninja-build

      - name: Install Ninja on Windows
        if: runner.os == 'Windows'
        run: choco install ninja

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

          echo "CC=${{ matrix.c_compiler }}" >> "$GITHUB_ENV"
          echo "CXX=${{ matrix.cpp_compiler }}" >> "$GITHUB_ENV"

          echo "SPDLOG_PROJECT_DIR=${{ github.workspace }}/spdlog" >> "$GITHUB_ENV"
          echo "SPDLOG_HOME=${{ github.workspace }}/spdlog-install" >> "$GITHUB_ENV"

      - name: Install spdlog
        shell: bash
        run: |
          bash scripts/install-spdlog.sh --src=$SPDLOG_PROJECT_DIR --prefix=$SPDLOG_HOME

      - name: Configure CMake and Build
        shell: bash
        run: >
          bash scripts/build-yutils.sh
